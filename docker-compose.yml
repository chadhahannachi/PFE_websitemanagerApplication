# version: '3.8'

services:
  # License Service (Laravel)
  license-service:
    # image: chadhahannachi/license-service:latest
    build:
      context: ./LicenceMicroservice
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    volumes:
      # - ./LicenceMicroservice:/var/www/html
      - .:/var/www/html
      - ./LicenceMicroservice/vendor:/var/www/html/vendor
      - ./LicenceMicroservice/.env:/var/www/html/.env
    environment:
      - DB_CONNECTION=mysql
      # - DB_HOST=127.0.0.1
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=microservicelicence
      - DB_USERNAME=root
      - DB_PASSWORD=root
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  # Website Manager Backend (NestJS)
  website-manager-backend:
    # image: chadhahannachi/website-manager-backend:latest
    build:
      context: ./WebSiteManagerApplication/backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/website-manager
      - GEMINI_API_KEY=AIzaSyBfNYWFViNdO9UG8_bszyR4Xc5dGAI8DBE
      - DEEPSEEK_API_KEY=sk-1f01537c474b4343828b68a67be5986d

    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network

  # Website Manager Frontend (React)
  website-manager-frontend:
    # image: chadhahannachi/website-manager-frontend:latest
    build:
      context: ./WebSiteManagerApplication/frontend
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_SOCKET_URL=http://localhost:5000
    volumes:
      - ./WebSiteManagerApplication/frontend:/app
      - /app/node_modules
      - /app/build
    depends_on:
      - website-manager-backend
    networks:
      - app-network

  # Frontend Backoffice (React)
  frontend-backoffice:
    # image: chadhahannachi/frontend-backoffice:latest
    build:
      context: ./FrontendBackoffice
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_SOCKET_URL=http://localhost:5000
      - NODE_PATH=./src
    volumes:
      - ./FrontendBackoffice:/app
      - /app/node_modules
      - /app/build
    depends_on:
      - website-manager-backend
    networks:
      - app-network

  # MySQL Database
  mysql:
    image: mysql:8.0.36
    platform: linux/amd64
    ports:
      - "3307:3306"
    environment:
      - MYSQL_DATABASE=microservicelicence
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ALLOW_EMPTY_PASSWORD=no
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot", "--silent"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password --ssl=0
    networks:
      - app-network

  # MongoDB Database
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
    depends_on:
      - mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  mongodb_data: 